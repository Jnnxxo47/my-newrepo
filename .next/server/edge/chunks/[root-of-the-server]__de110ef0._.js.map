{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["// middleware.ts\nimport { createMiddlewareClient } from '@supabase/auth-helpers-nextjs';\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport async function middleware(req: NextRequest) {\n  const res = NextResponse.next();\n  const supabase = createMiddlewareClient({ req, res });\n\n  const { data: { session } } = await supabase.auth.getSession();\n\n  const protectedRoutes = ['/dashboard', '/lectures'];\n\n  if (protectedRoutes.some((path) => req.nextUrl.pathname.startsWith(path))) {\n    if (!session) {\n      return NextResponse.redirect(new URL('/', req.url));\n    }\n  }\n\n  return res;\n}\n\nexport const config = {\n  matcher: ['/dashboard/:path*', '/lectures/:path*'],\n};\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AACA;AAAA;;;AAGO,eAAe,WAAW,GAAgB;IAC/C,MAAM,MAAM,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC7B,MAAM,WAAW,CAAA,GAAA,gLAAA,CAAA,yBAAsB,AAAD,EAAE;QAAE;QAAK;IAAI;IAEnD,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAE5D,MAAM,kBAAkB;QAAC;QAAc;KAAY;IAEnD,IAAI,gBAAgB,IAAI,CAAC,CAAC,OAAS,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ;QACzE,IAAI,CAAC,SAAS;YACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;QACnD;IACF;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAqB;KAAmB;AACpD"}}]
}