{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/gallery/Desktop/my-newrepo/app/lib/supabaseClient.ts"],"sourcesContent":["// app/lib/supabaseClient.ts\n'use client';\n\nimport { createPagesBrowserClient } from '@supabase/auth-helpers-nextjs';\n\nexport const supabaseClient = createPagesBrowserClient({\n  supabaseUrl: process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  supabaseKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n});\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;AAG5B;AAFA;;AAIO,MAAM,iBAAiB,CAAA,GAAA,wKAAA,CAAA,2BAAwB,AAAD,EAAE;IACrD,WAAW;IACX,WAAW;AACb","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/gallery/Desktop/my-newrepo/app/providers.tsx"],"sourcesContent":["'use client'\n\nimport { SessionContextProvider } from '@supabase/auth-helpers-react'\nimport { supabaseClient } from './lib/supabaseClient'\nimport { useState } from 'react'\nimport type { Session } from '@supabase/auth-helpers-react'\n\ntype ProvidersProps = {\n  children: React.ReactNode\n  initialSession?: Session | null\n}\n\nexport function Providers({ children, initialSession }: ProvidersProps) {\n  const [supabase] = useState(() => supabaseClient)\n\n  return (\n    <SessionContextProvider supabaseClient={supabase} initialSession={initialSession}>\n      {children}\n    </SessionContextProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAYO,SAAS,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAkB;IACpE,MAAM,CAAC,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAM,4HAAA,CAAA,iBAAc;IAEhD,qBACE,8OAAC,uKAAA,CAAA,yBAAsB;QAAC,gBAAgB;QAAU,gBAAgB;kBAC/D;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/gallery/Desktop/my-newrepo/app/components/Navbar.jsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\n\nexport default function Navbar({ isLoggedIn }) {\n  const router = useRouter();\n  const pathname = usePathname();\n\n  const handleLogoClick = () => {\n    if (pathname !== '/') {\n      router.push('/');\n    }\n  };\n\n  const handleLoginClick = () => {\n    router.push('/login');\n  };\n\n  return (\n    <nav className=\"w-full flex justify-between items-center px-6 py-4 shadow-md bg-white\">\n      <div className=\"flex items-center space-x-2 cursor-pointer\" onClick={handleLogoClick}>\n        <img src=\"/logo-icon.png\" alt=\"MathGPT Logo\" className=\"h-10 w-10\" />\n        <span className=\"text-xl font-bold text-gray-800\">MathGPT</span>\n      </div>\n\n      {!isLoggedIn && (\n        <button\n          className=\"bg-blue-600 text-white px-5 py-2 rounded-lg hover:bg-blue-700 transition text-sm font-medium shadow\"\n          onClick={handleLoginClick}\n        >\n          Log in\n        </button>\n      )}\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,OAAO,EAAE,UAAU,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,kBAAkB;QACtB,IAAI,aAAa,KAAK;YACpB,OAAO,IAAI,CAAC;QACd;IACF;IAEA,MAAM,mBAAmB;QACvB,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;gBAA6C,SAAS;;kCACnE,8OAAC;wBAAI,KAAI;wBAAiB,KAAI;wBAAe,WAAU;;;;;;kCACvD,8OAAC;wBAAK,WAAU;kCAAkC;;;;;;;;;;;;YAGnD,CAAC,4BACA,8OAAC;gBACC,WAAU;gBACV,SAAS;0BACV;;;;;;;;;;;;AAMT","debugId":null}}]
}